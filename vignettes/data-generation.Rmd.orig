---
title: "Data Generation"
author: Ivan Jacob Agaloos Pesigan
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Data Generation}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r}
#| include = FALSE
knitr::opts_chunk$set(
  collapse = TRUE,
  fig.path = "fig-vignettes-",
  fig.cap = "",
  fig.width = 11,
  fig.height = 8,
  fig.retina = 2,
  dpi = 300,
  comment = "#>"
)
options(knitr.duplicate.label = "allow")
```

The following presents an example of how to use the functions in this package to simulate a data set, perform a multivariate amputation, and multiple imputations. See the individual function documentation for more information.

The most basic mediation model involves three variables, $X$, $M$, and $Y$ whose associations are expressed in the following equations

\begin{equation}
	Y
	=
	\delta_{Y}
	+ \tau^{\prime}{X}
	+ \beta{M}
	+ \varepsilon_{Y},
\end{equation}

\begin{equation}
	M
	=
	\delta_{M}
	+ \alpha X
	+ \varepsilon_{M},
\end{equation}

\noindent where $\alpha$ represents the effect of the independent variable $X$ on the mediator variable $M$; $\beta$ represents the effect of the mediator variable $M$  on the dependent variable $Y$; $\tau^{\prime}$ represents the effect of the independent variable $X$ on the dependent variable $Y$, adjusting for the mediator variable $M$; $\delta_{M}$ and $\delta_{Y}$ are intercepts; and $\varepsilon_{M}$ and $\varepsilon_{Y}$ are stochastic error terms. The direct effect, $\tau^{\prime}$, which is the change in the dependent variable corresponding to one unit change in the independent variable, while the mediator variable is held constant, can be contrasted with the indirect effect (the product of $\alpha$ and $\beta$ or $\alpha \beta$), which represents  the change in the dependent variable via the mediator if the independent variable increases by one unit. See MacKinnon (2008) for more information on the simple mediation model.

## Mplus

Mplus Version 8.8 Demo for GNU/Linux was used in the study. Note that this version is equivalent to the commercial release except for the limitations on the number of variables that can be used in the analysis. See [https://www.statmodel.com/demo.shtml](https://www.statmodel.com/demo.shtml) for more details on the limitations and installation instructions.

The functions in this package will work on other versions of Mplus in various platforms. However, for compatibility, we recommend the use of Mplus Version 8.8 Demo for GNU/Linux. The functions in this package require the user to specify the path to the Mplus binary as the argument `mplus_bin`. For example, the default location of the Mplus demo binary in GNU/Linux is `/opt/mplusdemo/mpdemo`.

> **NOTE**: For complete reproducibility of the software stack, we recommend the use of `manmcmedmiss.sif` described in the [Containers](containers.html) article.

## Arguments

```{r}
#| message = FALSE
library(manMCMedMiss)
```

```{r}
#| include = FALSE
production <- TRUE
if (production) {
  m <- 100L
  R <- 20000L
  B <- 5000L
} else {
  m <- 10L
  R <- 10L
  B <- 10L
}
```

```{r}
#| echo = FALSE
variable <- c(
  "m",
  "mplus_bin"
)
value <- c(
  m,
  "\"/opt/mplusdemo/mpdemo\""
)
notes <- c(
  "Number of imputations.",
  "Path to Mplus binary."
)
tab <- cbind(
  Variable = variable,
  Value = value,
  Notes = notes
)
knitr::kable(
  x = tab
)
```

> **NOTE**: If you are using `manmcmedmiss-rocker` or `manmcmedmiss.sif` described in the [Containers](containers.html) article, set `mplus_bin = "mpdemo"`.

```{r}
#| include = FALSE
root <- rprojroot::is_rstudio_project
mplus_bin <- root$find_file(
  ".setup",
  "bin",
  "mpdemo"
)
```

## Parameters

```{r}
#| echo = FALSE
params <- params[which(params$taskid == 59), ]
n <- params$n
tauprime <- params$tauprime
alpha <- params$alpha
beta <- params$beta
variable <- c(
  "n",
  "tauprime",
  "alpha",
  "beta"
)
value <- c(
  n,
  tauprime,
  alpha,
  beta
)
notes <- c(
  "$n$",
  "$\\tau^{\\prime}$",
  "$\\alpha$",
  "$\\beta$"
)
tab <- cbind(
  Variable = variable,
  Value = value,
  Notes = notes
)
knitr::kable(
  x = tab
)
```

## Data

### Generation

Generate sample data with complete observations.

```{r}
set.seed(42)
data_complete <- GenData(
  n = n,
  tauprime = tauprime,
  beta = beta,
  alpha = alpha
)
knitr::kable(head(data_complete))
```

### Amputation

Generate sample data with missing values using the multivariate amputation approach proposed by Schouten et al. (2018).

```{r}
data_missing <- AmputeData(
  data_complete,
  mech = "MAR",
  prop = 0.10
)
knitr::kable(head(data_missing))
```

### Imputation

Perform multiple imputations following Asparouhov and Muthen (2010) using `Mplus`.

```{r}
data_mi <- ImputeData(
  data_missing,
  m = m,
  mplus_bin = mplus_bin
)
```

Show the first two complete data sets.

```{r}
data_mi[1:2]
```

## References

Asparouhov, T., & Muthen, B. (2010). *Multiple imputation with Mplus*. Retrieved from http://www.statmodel.com/download/Imputations7.pdf

MacKinnon, D. P. (2008). *Introduction to statistical mediation analysis*. Lawrence Erlbaum Associates.

Schouten, R. M., Lugtig, P. and Vink, G. (2018). Generating missing values for simulation purposes: A multivariate amputation procedure. *Journal of Statistical Computation and Simulation*, *88*(15), 1909--1930. https://doi.org/10.1080/00949655.2018.1491577
