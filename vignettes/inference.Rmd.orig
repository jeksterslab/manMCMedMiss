---
title: "Inference"
author: Ivan Jacob Agaloos Pesigan
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Inference}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r}
#| include = FALSE
knitr::opts_chunk$set(
  collapse = TRUE,
  fig.path = "fig-vignettes-",
  fig.cap = "",
  fig.width = 11,
  fig.height = 8,
  fig.retina = 2,
  dpi = 300,
  comment = "#>"
)
options(knitr.duplicate.label = "allow")
```

The following presents an example of how to use the functions in this package to generate confidence intervals for the indirect effect for the model fitted in the [Model Fitting](model-fitting.html) article.

```{r}
#| include = FALSE
root <- rprojroot::is_rstudio_project
source(
  knitr::purl(
    root$find_file(
      ".setup",
      "vignettes",
      "model-fitting.Rmd.orig"
    ),
    quiet = TRUE
  )
)
unlink("data-generation.Rmd.R")
unlink("model-fitting.Rmd.R")
```

## Arguments

```{r}
#| echo = FALSE
variables <- c(
  "R",
  "B"
)
values <- c(
  R,
  B
)
notes <- c(
  "Number of Monte Carlo replications.",
  "Number of bootstrap samples."
)
tab <- cbind(
  Variables = variables,
  Values = values,
  Notes = notes
)
knitr::kable(
  x = tab
)
```

## Monte Carlo Method

### Maximum Likelihood

```{r}
mc_ml <- MCML(
  fit_ml,
  R = R
)
mc_ml
```

### Multiple Imputation

The two versions are based on the pooled covariance matrix used. `vcov` uses the total covariance matrix $\mathbf{V}_{T}$ while `vcov_tilde` uses the adjusted total covariance matrix $\tilde{\mathbf{V}}_{T}$.

```{r}
mc_mi <- MCMI(
  fit_mi,
  R = R
)
mc_mi
```

## Nonparametric Bootstrapping

### Maximum Likelihood Nested within Nonparametric Bootstrap (NB(ML))

```{r}
nb_ml <- NBML(
  data_missing,
  B = B,
  mplus_bin = mplus_bin
)
nb_ml
```

### Multiple Imputation

#### Multiple Imputation Nested Within Nonparametric Bootstrap (NB(MI))

```{r}
nb_mi <- NBMI(
  data_missing,
  data_mi,
  B = B,
  m = m,
  mplus_bin = mplus_bin
)
nb_mi
```

#### Nonparametric Bootstrap Nested Within Multiple Imputation (MI(NB))

```{r}
mi_nb <- MINB(
  data_mi,
  B = B
)
mi_nb
```

## Joint Significance Test

The `JointSigML()` and `JointSigMI()` functions return `1` for a significant result and `0` otherwise. Note that the output vector's name corresponds to the `alpha` level. The default value of `alpha` is `alpha = c(0.05, 0.01, 0.001)`.

### Maximum Likelihood

```{r}
joint_ml <- JointSigML(
  fit_ml
)
joint_ml
```

### Multiple Imputation

The two versions are based on the two types of pooled covariance matrices $\mathbf{V}_{T}$ and $\tilde{\mathbf{V}}_{T}$.

```{r}
joint_mi <- JointSigMI(
  fit_mi
)
joint_mi
```

## Results

Here is a summary of the $95\%$ confidence intervals.

```{r}
ci <- rbind(
  mc_ml[c(3, 4)],
  mc_mi[, c(3, 4)],
  nb_ml[, c(2, 6)],
  nb_mi[, c(3, 4)],
  mi_nb[, c(3, 4)]
)
rownames(ci) <- c(
  "MC.FIML",
  "MC.MI",
  "MC.MI.ADJ",
  "NBBC(FIML)",
  "NBPC(FIML)",
  "NBBC(MI)",
  "NBPC(MI)",
  "MI(NBBC)",
  "MI(NBPC)"
)
knitr::kable(ci)
```
